---
name: build

on:
  push:
    paths:
      - .github/workflows/build.yml
      - .dive-ci
      - Dockerfile
  pull_request:
    paths:
      - .github/workflows/build.yml
      - .dive-ci
      - Dockerfile
  schedule:
    - cron: "42 13 * * 1"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        # this is needed because we restart the docker daemon for experimental
        # support
        options: "--restart always"
    name: ${{ matrix.base_img }}
    strategy:
      matrix:
        base_img:
          [
            "debian-9",
            "debian-10",
            "debian-11",
            "debian-sid",
            "ubuntu-18.04",
            "ubuntu-20.04",
            "ubuntu-20.10",
            "ubuntu-21.04",
          ]
    env:
      BASE_IMAGE: ${{ matrix.base_img }}
      DOCKER_DEPLOY_IMAGES: false
      DOCKER_PLATFORMS: >
        linux/amd64
        linux/arm/v7
        linux/arm64/v8

    steps:
      - uses: actions/checkout@v2
      - name: Set up env vars
        run: |
          set -vx
          echo "IMG=${BASE_IMAGE}">>$GITHUB_ENV
          echo "REPO=docker-ansible">>$GITHUB_ENV
          echo "DOCKER_BUILD_PLATFORMS=${DOCKER_PLATFORMS// /,}" >>$GITHUB_ENV
      - name: Set up Docker Buildx (local builds)
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Enable experimental support
        run: |
          config='/etc/docker/daemon.json'
          if [[ -e "$config" ]]; then
            sudo sed -i -e 's/{/{ "experimental": true, /' "$config"
          else
            echo '{ "experimental": true }' | sudo tee "$config"
          fi
          sudo systemctl restart docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: base_image=${{ env.IMG }}
          platforms: ${{ env.DOCKER_BUILD_PLATFORMS }}
          push: true
          tags: localhost:5000/${{ secrets.DOCKER_USER }}/${{ env.REPO }}:${{ env.IMG }}
      - name: Dive check
        run: |
          docker run --rm -i -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(pwd):/mnt -w /mnt wagoodman/dive:latest \
          --ci localhost:5000/${{ secrets.DOCKER_USER }}/${{ env.REPO }}:${{ env.IMG }}
      - name: Python check
        run: |
          docker run --name test-${{ env.IMG }} -d --privileged \
          -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
          localhost:5000/${{ secrets.DOCKER_USER }}/${{ env.REPO }}:${{ env.IMG }}
          docker exec test-${{ env.IMG }} python3 -V
      - name: Check GitHub settings
        if: >
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/master' ||
          startsWith(github.ref, 'refs/tags/')) &&
          github.repository == 'fauust/docker-ansible'
        run: |
          missing=()
          [[ -n "${{ secrets.DOCKER_USER }}" ]] || missing+=(DOCKER_USER)
          [[ -n "${{ secrets.DOCKER_PASSWORD }}" ]] || missing+=(DOCKER_PASSWORD)
          for i in "${missing[@]}"; do
            echo "Missing github secret: $i"
          done
          (( ${#missing[@]} == 0 )) || exit 1
          echo "DOCKER_DEPLOY_IMAGES=true" >> $GITHUB_ENV
      - name: Login to DockerHub
        if: ${{ env.DOCKER_DEPLOY_IMAGES == 'true' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push images to DockerHub
        if: ${{ env.DOCKER_DEPLOY_IMAGES == 'true' }}
        run: |
          msg="Push docker image to DockerHub (${{ env.IMG }})"
          line="${msg//?/=}"
          printf "\n${line}\n${msg}\n${line}\n"
          skopeo copy --all --src-tls-verify=0 \
          docker://localhost:5000/${{ secrets.DOCKER_USER }}/${{ env.REPO }}:${{ env.IMG }} \
          docker://docker.io/${{ secrets.DOCKER_USER }}/${{ env.REPO }}:${{ env.IMG }}
      - name: Update DockerHub description
        if: ${{ env.DOCKER_DEPLOY_IMAGES == 'true' }}
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USER }}/${{ env.REPO }}
          readme-filepath: README.md
